import time


class InsertionSort:

    def insertion_sort(self, arr):
        """
        :param arr: 需要排序的数组
        :return: 排序后的数组
        """
        # 取数组长度
        n = len(arr)
        # 从第二个元素开始遍历
        for i in range(1, n):
            key = arr[i]  # 当前待插入元素
            j = i - 1  # 已经排序的部分的最后一个索引
            # 从后向前比较并后移，循环结束即元素比较完成，可插入
            while j >= 0 and key < arr[j]:
                arr[j + 1] = arr[j]  # 后移
                j -= 1
            arr[j + 1] = key  # 将待插入元素插入到正确位置
        return arr


start = time.perf_counter()

if __name__ == '__main__':
    arr = [497, 317, 170, 967, 799, 597, 844, 708, 364, 711, 27, 261, 758, 343, 938, 666, 770, 686, 98, 276, 788, 783, 405, 491, 73, 164, 654, 693, 505, 222, 814, 486, 160, 348, 575, 992, 77, 171, 268, 631, 814, 409, 419, 486, 192, 6, 520, 96, 470, 601, 929, 911, 480, 392, 561, 277, 974, 939, 409, 213, 921, 432, 546, 291, 232, 731, 794, 988, 240, 947, 553, 605, 65, 372, 145, 956, 269, 349, 942, 476, 386, 552, 277, 574, 934, 232, 412, 272, 220, 169, 889, 71, 551, 870, 121, 315, 606, 780, 887, 704]
    print('排序前的数组为：\n', arr)
    sorted_arr = InsertionSort().insertion_sort(arr)
    print('排序后的数组为：\n', sorted_arr)

end = time.perf_counter()
print('程序运行时间为：', end - start)